name: Java CI with Gradle

on:
  push:
    branches: [ "release" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
    - name: Build with Gradle Wrapper
      run: ./gradlew build

    # Docker 이미지 빌드
    - name: Build Docker Image
      run: |
        docker build -t my-app:latest .

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      id-token: write # AWS EKS에 배포 시 필요할 수 있음

    steps:
    - uses: actions/checkout@v4
    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1 # 필요한 리전으로 변경


    # EC2에 SSH로 접속하여 배포
    - name: Deploy to EC2
      run: |
        ssh -o StrictHostKeyChecking=no -i ${{ secrets.EC2_SSH_KEY }} ec2-user@<your_ec2_instance_public_ip> << 'EOF'
          docker pull <your_account_id>.dkr.ecr.us-east-1.amazonaws.com/my-app:latest
          docker run -d -p 80:8080 <your_account_id>.dkr.ecr.us-east-1.amazonaws.com/my-app:latest
        EOF
